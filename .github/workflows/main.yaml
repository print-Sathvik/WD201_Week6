name: Auto Test and Deploy Todo app
on: push
jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: wd-todo-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:node
      - name: Run the app
        id: run-app
        run: |
          npm install
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=3000 npm start &
          sleep 5

      - name: Run integration tests
        run: |
          npm install cypress cypress-json-results
          npx cypress run

  build_deploy:
    name: "Deploy"
    needs: run-tests
    runs-on: ubuntu-latest
    # Uses the action provided by render
    # By using the API key of my account and Service ID of the web service started in render
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  notify:
    needs: [run-tests, build_deploy]
    # Runs this task irrespective of outcome of previous two jobs using if always()
    if: ${{ always() }}
    name: Discord Notification
    runs-on: ubuntu-latest
    # Webhook URL is generated for my discord server and stored as
    # secret or env variable which is accessed using secrets.DISCORD_WEBHOOK_URL
    steps:
      - name: Send Discord notification
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-title: New Commit Status - ${{ job.status }}
          embed-url: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
          content: "A new commit is pushed to the application Online Voting Platform"
          embed-author-name: ${{ github.event.head_commit.author.username }}
          embed-color: 65280
